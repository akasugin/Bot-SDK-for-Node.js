{
  "name": "stream-via",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "version": "1.0.4",
  "description": "stream-via",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/stream-via.git"
  },
  "license": "MIT",
  "main": "./lib/stream-via.js",
  "keywords": [
    "through",
    "stream",
    "process",
    "chunk",
    "transform"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "tape test/*.js",
    "docs": "jsdoc2md -t jsdoc2md/README.hbs --member-index-format list --param-list-format list lib/*.js > README.md; echo"
  },
  "devDependencies": {
    "buffer-equal": "^1.0.0",
    "jsdoc-to-markdown": "^3.0.0",
    "tape": "^4.6.3"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/stream-via.svg)](https://www.npmjs.org/package/stream-via)\n[![npm module downloads](http://img.shields.io/npm/dt/stream-via.svg)](https://www.npmjs.org/package/stream-via)\n[![Build Status](https://travis-ci.org/75lb/stream-via.svg?branch=master)](https://travis-ci.org/75lb/stream-via)\n[![Dependency Status](https://david-dm.org/75lb/stream-via.svg)](https://david-dm.org/75lb/stream-via)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n# stream-via\nProcess each chunk of a stream via the supplied function. Useful for meddling inside a stream pipeline. Works in both string/Buffer and object modes.\n\n## Synopsis\n\nReplace all instances of the `a` character with `4`.\n\n```js\nconst via = require('stream-via')\nconst fs = require('fs')\n\nprocess.stdin\n  .pipe(via(function (chunk) {\n    return chunk.toString().replace(/a/g, '4')\n  }))\n  .pipe(process.stdout)\n```\n\nOutput:\n```\n$ echo 'twat' | node example/simple.js\ntw4t\n```\n\n# API\n\n<a name=\"module_stream-via\"></a>\n\n## stream-via\n\n* [stream-via](#module_stream-via)\n    * [via(throughFunction, [options])](#exp_module_stream-via--via) ⇒ [<code>Duplex</code>](https://nodejs.org/api/stream.html#stream_class_stream_duplex) ⏏\n        * [.async(throughFunction, [options])](#module_stream-via--via.async) ⇒ [<code>Duplex</code>](https://nodejs.org/api/stream.html#stream_class_stream_duplex)\n        * [~throughFunction](#module_stream-via--via..throughFunction) : <code>function</code>\n\n<a name=\"exp_module_stream-via--via\"></a>\n\n### via(throughFunction, [options]) ⇒ [<code>Duplex</code>](https://nodejs.org/api/stream.html#stream_class_stream_duplex) ⏏\n**Kind**: Exported function  \n**Params**\n\n- throughFunction [<code>throughFunction</code>](#module_stream-via--via..throughFunction) - a function to process each chunk\n- [options] <code>object</code> - passed to the returned stream constructor\n\n<a name=\"module_stream-via--via.async\"></a>\n\n#### via.async(throughFunction, [options]) ⇒ [<code>Duplex</code>](https://nodejs.org/api/stream.html#stream_class_stream_duplex)\n**Kind**: static method of [<code>via</code>](#exp_module_stream-via--via)  \n**Params**\n\n- throughFunction [<code>throughFunction</code>](#module_stream-via--via..throughFunction) - a function to process each chunk\n- [options] <code>object</code> - passed to the returned stream constructor\n\n<a name=\"module_stream-via--via..throughFunction\"></a>\n\n#### via~throughFunction : <code>function</code>\n**Kind**: inner typedef of [<code>via</code>](#exp_module_stream-via--via)  \n**Params**\n\n- chunk <code>buffer</code> | <code>string</code>\n- enc <code>string</code>\n- done <code>function</code> - only used in `via.async`, call it like so: `done(err, returnValue)`.\n\n\n\n* * *\n\n&copy; 2015-17 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/stream-via/issues"
  },
  "_id": "stream-via@1.0.4",
  "dist": {
    "shasum": "a90bc3807e0d79c0f0f810ea43f6508e3a6e2e46"
  },
  "_from": "stream-via@^1.0.4",
  "_resolved": "https://registry.npmjs.org/stream-via/-/stream-via-1.0.4.tgz"
}
