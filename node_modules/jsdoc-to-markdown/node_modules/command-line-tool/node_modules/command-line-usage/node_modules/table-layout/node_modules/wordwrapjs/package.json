{
  "name": "wordwrapjs",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "version": "3.0.0",
  "description": "Word-wrapping for javascript.",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/wordwrapjs.git"
  },
  "license": "MIT",
  "keywords": [
    "word",
    "line",
    "wrap",
    "text",
    "columns",
    "wordwrap"
  ],
  "engines": {
    "node": ">=4.0.0"
  },
  "scripts": {
    "test": "node test.js",
    "docs": "jsdoc2md -t jsdoc2md/README.hbs index.js > README.md; echo"
  },
  "devDependencies": {
    "jsdoc-to-markdown": "^3.0.0",
    "test-runner": "~0.4.0"
  },
  "dependencies": {
    "reduce-flatten": "^1.0.1",
    "typical": "^2.6.1"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/wordwrapjs.svg)](https://www.npmjs.org/package/wordwrapjs)\n[![npm module downloads](http://img.shields.io/npm/dt/wordwrapjs.svg)](https://www.npmjs.org/package/wordwrapjs)\n[![Build Status](https://travis-ci.org/75lb/wordwrapjs.svg?branch=master)](https://travis-ci.org/75lb/wordwrapjs)\n[![Dependency Status](https://david-dm.org/75lb/wordwrapjs.svg)](https://david-dm.org/75lb/wordwrapjs)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n# wordwrapjs\n\nWord wrapping, with a few features.\n\n- force-break option\n- wraps hypenated words\n- multilingual - wraps any language that uses whitespace for word separation.\n\n## Synopsis\n\nWrap some text in a 20 character column.\n\n```js\n> wordwrap = require('wordwrapjs')\n\n> text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n\n> result = wordwrap.wrap(text, { width: 20 })\n```\n\n`result` now looks like this:\n```\nLorem ipsum dolor\nsit amet,\nconsectetur\nadipiscing elit, sed\ndo eiusmod tempor\nincididunt ut labore\net dolore magna\naliqua.\n```\n\nBy default, long words will not break. Unless you set the `break` option.\n```js\n> url = 'https://github.com/75lb/wordwrapjs'\n\n> wrap.lines(url, { width: 18 })\n[ 'https://github.com/75lb/wordwrapjs' ]\n\n> wrap.lines(url, { width: 18, break: true })\n[ 'https://github.com', '/75lb/wordwrapjs' ]\n```\n\n## API Reference\n\n\n* [wordwrapjs](#module_wordwrapjs)\n    * [WordWrap](#exp_module_wordwrapjs--WordWrap) ⏏\n        * [.wrap(text, [options])](#module_wordwrapjs--WordWrap.wrap) ⇒ <code>string</code>\n        * [.lines(text, options)](#module_wordwrapjs--WordWrap.lines)\n        * [.isWrappable(text)](#module_wordwrapjs--WordWrap.isWrappable) ⇒ <code>boolean</code>\n        * [.getChunks(text)](#module_wordwrapjs--WordWrap.getChunks) ⇒ <code>Array.&lt;string&gt;</code>\n\n<a name=\"exp_module_wordwrapjs--WordWrap\"></a>\n\n### WordWrap ⏏\n**Kind**: Exported class  \n<a name=\"module_wordwrapjs--WordWrap.wrap\"></a>\n\n#### WordWrap.wrap(text, [options]) ⇒ <code>string</code>\n**Kind**: static method of [<code>WordWrap</code>](#exp_module_wordwrapjs--WordWrap)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| text | <code>string</code> | the input text to wrap |\n| [options] | <code>object</code> | optional configuration |\n| [options.width] | <code>number</code> | the max column width in characters (defaults to 30). |\n| [options.break] | <code>boolean</code> | if true, words exceeding the specified `width` will be forcefully broken |\n| [options.noTrim] | <code>boolean</code> | By default, each line output is trimmed. If `noTrim` is set, no line-trimming occurs - all whitespace from the input text is left in. |\n\n<a name=\"module_wordwrapjs--WordWrap.lines\"></a>\n\n#### WordWrap.lines(text, options)\nWraps the input text, returning an array of strings (lines).\n\n**Kind**: static method of [<code>WordWrap</code>](#exp_module_wordwrapjs--WordWrap)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| text | <code>string</code> | input text |\n| options | <code>object</code> | Accepts same options as constructor. |\n\n<a name=\"module_wordwrapjs--WordWrap.isWrappable\"></a>\n\n#### WordWrap.isWrappable(text) ⇒ <code>boolean</code>\nReturns true if the input text would be wrapped if passed into `.wrap()`.\n\n**Kind**: static method of [<code>WordWrap</code>](#exp_module_wordwrapjs--WordWrap)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| text | <code>string</code> | input text |\n\n<a name=\"module_wordwrapjs--WordWrap.getChunks\"></a>\n\n#### WordWrap.getChunks(text) ⇒ <code>Array.&lt;string&gt;</code>\nSplits the input text into an array of words and whitespace.\n\n**Kind**: static method of [<code>WordWrap</code>](#exp_module_wordwrapjs--WordWrap)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| text | <code>string</code> | input text |\n\n\n* * *\n\n&copy; 2015-17 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/wordwrapjs/issues"
  },
  "_id": "wordwrapjs@3.0.0",
  "dist": {
    "shasum": "aa9f207a81a01e0b5a312e8b858be2575e2e758f"
  },
  "_from": "wordwrapjs@^3.0.0",
  "_resolved": "https://registry.npmjs.org/wordwrapjs/-/wordwrapjs-3.0.0.tgz"
}
